[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\vlads\AppData\Local\Temp\idea11.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\vlads\AppData\Local\Temp\idea11.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.0 (JetBrains s.r.o. Java 11.0.7)
[debug]       Load.loadUnit: plugins took 191.43ms
[debug]       Load.loadUnit: defsScala took 0.5634ms
[debug] [Loading] Scanning directory C:\Users\vlads\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\vlads\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 42.3829 ms
[debug]           Load.resolveProject(global-plugins) took 77.3903ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\vlads\.sbt\1.0\plugins, plugins: List(<none>))) took 164.8167ms
[debug] [Loading] Done in C:\Users\vlads\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 203.5504ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.4022ms
[debug]     Load.loadUnit(file:/C:/Users/vlads/.sbt/1.0/plugins/, ...) took 412.2011ms
[debug]   Load.apply: load took 717.8797ms
[debug]   Load.apply: resolveProjects took 8.7263ms
[debug]   Load.apply: finalTransforms took 91.8244ms
[debug]   Load.apply: config.delegates took 10.6823ms
[debug]   Load.apply: Def.make(settings)... took 1097.4578ms
[debug]   Load.apply: structureIndex took 159.9187ms
[debug]   Load.apply: mkStreams took 2.8645ms
[info] loading global plugins from C:\Users\vlads\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4685.7061ms
[debug]           Load.loadUnit: plugins took 50.6063ms
[debug]           Load.loadUnit: defsScala took 0.0057ms
[debug] [Loading] Scanning directory D:\Projects Scala\NAUMEN\naumen.scala.course.2020.autumn\homeworks\homework_1\task_3\project
[debug]             Load.loadUnit: mkEval took 10.3413ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Projects Scala\NAUMEN\naumen.scala.course.2020.autumn\homeworks\homework_1\task_3\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.6968 ms
[info] loading settings for project task_3-build from idea11.sbt ...
[debug]               Load.resolveProject(task_3-build) took 12.2127ms
[debug]             Load.loadTransitive: finalizeProject(Project(id task_3-build, base: D:\Projects Scala\NAUMEN\naumen.scala.course.2020.autumn\homeworks\homework_1\task_3\project, plugins: List(<none>))) took 15.7385ms
[debug] [Loading] Done in D:\Projects Scala\NAUMEN\naumen.scala.course.2020.autumn\homeworks\homework_1\task_3\project, returning: (task_3-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 219.6288ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.7317ms
[debug]         Load.loadUnit(file:/D:/Projects%20Scala/NAUMEN/naumen.scala.course.2020.autumn/homeworks/homework_1/task_3/project/, ...) took 277.1461ms
[debug]       Load.apply: load took 279.0696ms
[debug]       Load.apply: resolveProjects took 0.1582ms
[debug]       Load.apply: finalTransforms took 15.8436ms
[debug]       Load.apply: config.delegates took 0.5876ms
[debug]       Load.apply: Def.make(settings)... took 116.84ms
[debug]       Load.apply: structureIndex took 39.9617ms
[debug]       Load.apply: mkStreams took 0.003ms
[info] loading project definition from D:\Projects Scala\NAUMEN\naumen.scala.course.2020.autumn\homeworks\homework_1\task_3\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 972.2691ms
[debug]     Load.loadUnit: defsScala took 0.0036ms
[debug] [Loading] Scanning directory D:\Projects Scala\NAUMEN\naumen.scala.course.2020.autumn\homeworks\homework_1\task_3
[debug]       Load.loadUnit: mkEval took 0.3054ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Projects Scala\NAUMEN\naumen.scala.course.2020.autumn\homeworks\homework_1\task_3, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.4415 ms
[info] loading settings for project task_3 from build.sbt ...
[debug]         Load.resolveProject(task_3) took 52.5322ms
[debug]       Load.loadTransitive: finalizeProject(Project(id task_3, base: D:\Projects Scala\NAUMEN\naumen.scala.course.2020.autumn\homeworks\homework_1\task_3, plugins: List(<none>))) took 57.705ms
[debug] [Loading] Done in D:\Projects Scala\NAUMEN\naumen.scala.course.2020.autumn\homeworks\homework_1\task_3, returning: (task_3)
[debug]     Load.loadUnit: loadedProjectsRaw took 106.582ms
[debug]     Load.loadUnit: cleanEvalClasses took 5.5316ms
[debug]   Load.loadUnit(file:/D:/Projects%20Scala/NAUMEN/naumen.scala.course.2020.autumn/homeworks/homework_1/task_3/, ...) took 1085.1022ms
[debug] Load.apply: load took 1087.2266ms
[debug] Load.apply: resolveProjects took 0.1778ms
[debug] Load.apply: finalTransforms took 38.5588ms
[debug] Load.apply: config.delegates took 0.4225ms
[debug] Load.apply: Def.make(settings)... took 121.0521ms
[debug] Load.apply: structureIndex took 34.9877ms
[debug] Load.apply: mkStreams took 0.0025ms
[info] set current project to FirstSbt (in build file:/D:/Projects%20Scala/NAUMEN/naumen.scala.course.2020.autumn/homeworks/homework_1/task_3/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 63984 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 63984, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to FirstSbt (in build file:/D:/Projects%20Scala/NAUMEN/naumen.scala.course.2020.autumn/homeworks/homework_1/task_3/)
[debug] > Exec(idea-shell, None, None)
